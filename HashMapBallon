package Sem2;

import java.util.List;
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Test;
import static org.junit.Assert.*;
import org.junit.Before;
import org.junit.BeforeClass;

/**
 *
 * @author Benedikte
 */
public class Sem2HashMapTest {

    Sem2HashMap instance = new Sem2HashMap();

    @BeforeClass
    public static void setUpClass() throws Exception {
    }

    @AfterClass
    public static void tearDownClass() throws Exception {
    }

    @Before
    public void setUp() throws Exception {
//         Sem2HashMap instance = new Sem2HashMap();
        instance.put("Søren", new Address("Dumpedalvej 20"));
    }

    @After
    public void tearDown() throws Exception {
    }

        @Test
    public void testGet() {
        System.out.println("get");
        String key = "";
//        Sem2HashMap instance = new Sem2HashMap();
        Address expResult = null;
        Address result = instance.get(key);
        assertEquals(expResult, result);
      
    }
    
  // her er lavet en test kun på get hvor jeg indtaster key value par
    // allerede i setup af testen 

    @Test
    public void testGet2() {

        System.out.println("get");
        String key = "Søren";
        assertEquals(instance.get(key).street, "Dumpedalvej 20");

    }

    @Test
    public void testPut() {
        System.out.println("put");
        String key = "";
        Address value = null;
//        Sem2HashMap instance = new Sem2HashMap();
        instance.put(key, value);
        ;
    }
    
    
     @Test
    public void testPut2() {
        System.out.println("put");
       
        String key = "Winnie the Pooh";
        Address value = new Address("Syvmileskoven1");
//        Sem2HashMap instance = new Sem2HashMap();
        instance.put(key, value);
       
    }
    
// denne test er til når vores hashmap ikke håndterer kollisioner. 
// Det vi ser er at testen viser en out of bounds exeption selvom der 
//   kun er 3 keys i et array størrelse 3, men er ikke helt sikker på 
// at det er nok som failed test betragtet
    
   @Test
    public void testPutCollisions(){
       instance.put("Winnie", new Address("Syvmileskoven1"));
       instance.put("Andreas", new Address("ClosetocphLyngby 1"));
      instance.get("Søren");
      instance.get("Andreas");
      instance.get("Winnie");
    
    }

    @Test
    public void testContainsKey() {
        System.out.println("containsKey");
        String key = "Weber";
        Sem2HashMap instance3 = new Sem2HashMap();
        boolean expResult = false;
        boolean result = instance3.containsKey(key);
        assertEquals(expResult, result);
    }

    @Test
    public void testSize0() {
        System.out.println("size");
        Sem2HashMap instance = new Sem2HashMap();
        int expResult = 0;
        int result = instance.size();
        assertEquals(expResult, result);
    }

    @Test
    public void testSize1() {
        System.out.println("size");
        Sem2HashMap instance = new Sem2HashMap();
        instance.put("Joe", new Address("Nowhere 9"));
        int expResult = 1;
        int result = instance.size();
        assertEquals(expResult, result);
    }

    @Test
    public void testValues() {
        System.out.println("values");
        Sem2HashMap instance = new Sem2HashMap();
        List<Address> expResult = null;
        List<Address> result = instance.values();
        assertEquals(expResult, result);
    }

    @Test
    public void testValues2() {
        System.out.println("values");
        Sem2HashMap instance = new Sem2HashMap();
        List<Address> expResult = null;
        List<Address> result = instance.values();
        assertEquals(expResult, result);
    }

    @Test
    public void testSize() {
        System.out.println("size");
       Sem2HashMap instance2 = new Sem2HashMap();
        int expResult = 0;
        int result = instance2.size();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
       
    }
    
      @Test
    public void testSize2() {
        System.out.println("size");
//       Sem2HashMap instance = new Sem2HashMap(); (vi bruger den fra starten 
        int expResult = 1;
        int result = instance.size();
        assertEquals(expResult, result);
        // TODO review the generated test code and remove the default call to fail.
       
    }
}
